%% Flux into top of water column
function [h] = plotYYSedFluxOneRun(dataWC,y,delta,plotSpecs,plotNum,integrationLim,ylimAll,comp)
fluxNorm = 10^-4;
fig = figure;
fig.PaperUnits = 'centimeters';
fig.PaperPosition = plotSpecs.fullPageFigSize;
clf
ha = tight_subplot(5,1,[0.03 .025],[.1 .04],[.12 .08]);

xticklabels = {'0','\pi/4', '\pi/2','3\pi/4', '\pi','5\pi/4', '3\pi/2','7\pi/4', '2 \pi'};
xtick = [0,pi/4,pi/2,3*pi/4,pi,5*pi/4,3*pi/2,7*pi/4,2*pi];

for panel = 1:5
    set(gca,'box','on')
    
    if panel == 1
        axes(ha(1))
        bottomY = integrationLim(1,1);
        topY = integrationLim(1,2);
        ylim = ylimAll(1,:);
        xlim = [0 2*pi];
        
        set(gca,'ylim',ylim)
        set(gca,'xlim',xlim,'xticklabel',[],'xtick',xtick)
        set(gca,'FontSize',plotSpecs.axesfontsize)
        
        a1 = annotation(fig,'textbox',...
            [0.766144283885229 0.892315012479271 0.126685796465193 0.0295238091832115],...
            'String',['$z_1 =$ ' num2str(round(integrationLim(1,1))) '$\Delta$ to $z_1 =$ ' num2str(integrationLim(1,2)) '$\Delta$'],...
            'Interpreter','latex',...
            'FontSize',7,...
            'FitBoxToText','on',...
            'Margin',2,...
            'LineStyle','none',...
            'VerticalAlignment','middle',...
            'HorizontalAlignment','center',...
            'BackgroundColor',[1 1 1]);
        
    elseif panel == 2
        axes(ha(2))
        bottomY = integrationLim(2,1);
        topY = integrationLim(2,2);
        ylim = ylimAll(2,:);
        xlim = [0 2*pi];
        
        set(gca,'ylim',ylim)
        set(gca,'xlim',xlim,'xticklabel',[],'xtick',xtick)
        set(gca,'FontSize',plotSpecs.axesfontsize)
        
        a2 = annotation(fig,'textbox',...
            [0.764358569599515 0.73517215533642 0.126685796465193 0.0295238091832115],...
            'String',['$z_1 =$ ' num2str(integrationLim(2,1)) '$\Delta$ to $z_1 =$ ' num2str(integrationLim(2,2)) '$\Delta$'],...
            'Interpreter','latex',...
            'FontSize',7,...
            'FitBoxToText','on',...
            'Margin',2,...
            'LineStyle','none',...
            'VerticalAlignment','middle',...
            'HorizontalAlignment','center',...
            'BackgroundColor',[1 1 1]);
    elseif panel == 3
        axes(ha(3))
        bottomY = integrationLim(3,1);
        topY = integrationLim(3,2);
        ylim = ylimAll(3,:);
        xlim = [0 2*pi];
        
        ylab = ylabel('Sediment flux normalized by $w_{\mathrm{s}} \overline{C}/\Delta Z$');
        set(ylab,'interpreter','Latex','FontSize',plotSpecs.labfontsize)
        set(gca,'ylim',ylim)
        set(gca,'xlim',xlim,'xticklabel',[],'xtick',xtick)
        set(gca,'FontSize',plotSpecs.axesfontsize)
        
        a3 = annotation(fig,'textbox',...
            [0.764358569599515 0.556600726764994 0.126685796465193 0.0295238091832115],...
            'String',['$z_1 =$ ' num2str(integrationLim(3,1)) '$\Delta$ to $z_1 =$ ' num2str(integrationLim(3,2)) '$\Delta$'],...
            'Interpreter','latex',...
            'FontSize',7,...
            'FitBoxToText','on',...
            'Margin',2,...
            'LineStyle','none',...
            'VerticalAlignment','middle',...
            'HorizontalAlignment','center',...
            'BackgroundColor',[1 1 1]);
    elseif panel == 4
        axes(ha(4))
        bottomY = integrationLim(4,1);
        topY = integrationLim(4,2);
        ylim = ylimAll(4,:);
        xlim = [0 2*pi];
        
        set(gca,'ylim',ylim)
        set(gca,'xlim',xlim,'xticklabel',[],'xtick',xtick)
        set(gca,'FontSize',plotSpecs.axesfontsize)
        
        a4 = annotation(fig,'textbox',...
            [0.764358569599515 0.378029298193566 0.126685796465193 0.0295238091832116],...
            'String',['$z_1 =$ ' num2str(integrationLim(4,1)) '$\Delta$ to $z_1 =$ ' num2str(integrationLim(4,2)) '$\Delta$'],...
            'Interpreter','latex',...
            'FontSize',7,...
            'FitBoxToText','on',...
            'Margin',2,...
            'LineStyle','none',...
            'VerticalAlignment','middle',...
            'HorizontalAlignment','center',...
            'BackgroundColor',[1 1 1]);
        
    elseif panel ==5
        axes(ha(5))
        bottomY = integrationLim(5,1);
        topY = integrationLim(5,2);
        ylim = ylimAll(5,:);
        xlim = [0 2*pi];
        
        set(gca,'ylim',ylim)
        set(gca,'xlim',xlim,'xtick',xtick,'xticklabel',xticklabels)
        xlab = xlabel('$\theta$');
        set(xlab,'interpreter','Latex','FontSize',plotSpecs.labfontsize)
        set(gca,'FontSize',plotSpecs.axesfontsize)
        
        a5 = annotation(fig,'textbox',...
           [0.7625728553138 0.213743583907854 0.126685796465193 0.0295238091832116],...
            'String',['$z_1 =$ ' num2str(integrationLim(5,1)) '$\Delta$ to $z_1 =$ ' num2str(integrationLim(5,2)) '$\Delta$'],...
            'Interpreter','latex',...
            'FontSize',7,...
            'FitBoxToText','on',...
            'Margin',2,...
            'LineStyle','none',...
            'VerticalAlignment','middle',...
            'HorizontalAlignment','center',...
            'BackgroundColor',[1 1 1]);
    end
    hold
    
    SSCChangeWave = dataWC(plotNum).waveDiffusionFlux+...
        dataWC(plotNum).CsedWave*dataWC(plotNum).ws+...
        dataWC(plotNum).vCsedWave;
    
    SSCChangeSteady = dataWC(plotNum).Fdc+...
        dataWC(plotNum).CsedSteady*dataWC(plotNum).ws+...
        dataWC(plotNum).vCsedSteady;
    
    %Concentration change
    plotIntegratedFlux(SSCChangeWave/fluxNorm,...
        SSCChangeSteady/fluxNorm,y/delta,bottomY,topY,plotSpecs,4,comp)
    
    %Diffusive Flux
    plotIntegratedFlux(dataWC(plotNum).waveDiffusionFlux/fluxNorm,...
        dataWC(plotNum).Fdc/fluxNorm,y/delta,bottomY,topY,plotSpecs,1,comp)
    
    %Settling Flux
    plotIntegratedFlux(dataWC(plotNum).CsedWave*dataWC(plotNum).ws/fluxNorm,...
        dataWC(plotNum).CsedSteady*dataWC(plotNum).ws/fluxNorm,y/delta,bottomY,topY,plotSpecs,2,comp)
    
    %Turb Flux
    plotIntegratedFlux(dataWC(plotNum).vCsedWave/fluxNorm,...
        dataWC(plotNum).vCsedSteady/fluxNorm,y/delta,bottomY,topY,plotSpecs,3,comp)
end
end

%%
function [h] = plotIntegratedFlux(Flux1,Flux2,z,z1,z2,plotSpecs,plotColorInd,comp)
indz1 = find(z>=z1,1,'first');
indz2 = find(z>=z2,1,'first');

[m,n] = size(Flux1);
steadyFlux = Flux2(indz2)-Flux2(indz1);

if comp == 0
plotVar = Flux1(indz2,:)-Flux1(indz1,:)+steadyFlux;
elseif comp==1 
    plotVar = Flux1(indz2,:)-Flux1(indz1,:);
end

x = (0:n)/n*2*pi;
if plotColorInd == 4
    plot(x,[plotVar, plotVar(1)],...
        '-k','linewidth',plotSpecs.linewidth)
else
    plot(x,[plotVar, plotVar(1)],...
        '-','color',plotSpecs.Cbudget(plotColorInd,:),'linewidth',plotSpecs.linewidth)
    
    if comp == 1
    plot([x(1), x(end)],[steadyFlux, steadyFlux],...
        '--','color',plotSpecs.Cbudget(plotColorInd,:),'linewidth',plotSpecs.linewidth)
    end
end
end


